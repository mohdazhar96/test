#  ------------------------------------------------------------
#   Copyright (c) Microsoft Corporation.  All rights reserved.
#   Licensed under the MIT License (MIT). See License.txt in the repo root for license information.
#  ------------------------------------------------------------

###################################################################################################
# newhire
###################################################################################################
{{- $fullname := include "newhire.fullname" . | replace "." "" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullname }}
  labels:
    app.kubernetes.io/name: {{ include "newhire.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    app.kubernetes.io/component: backend
    helm.sh/chart: {{ include "newhire.chart" . }}
    aadpodidbinding: {{ $fullname }}
    tags.datadoghq.com/env: {{ .Values.env.datadog_env }}
    tags.datadoghq.com/service: {{ $fullname }}
    tags.datadoghq.com/version: {{ .Chart.AppVersion }}
  annotations:
    kubernetes.io/change-cause: {{ .Values.reason }}
spec:
  replicas: {{ default 1 .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "newhire.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "newhire.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/version: {{ .Chart.AppVersion }}
        app.kubernetes.io/component: backend
        helm.sh/chart: {{ include "newhire.chart" . }}
        aadpodidbinding: {{ $fullname }}
        revision: {{ .Release.Revision | quote }}
        tags.datadoghq.com/env: {{ .Values.env.datadog_env }}
        tags.datadoghq.com/service: {{ $fullname }}
        tags.datadoghq.com/version: {{ .Chart.AppVersion }}
    spec:
      #volumes:
      #  - name: heapdump
      #    persistentVolumeClaim:
      #      claimName: heapdump
      containers:
      - name: newhire
        image: "{{ .Values.dockerregistry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - name: service
          containerPort: 8806
        readinessProbe:  
          httpGet:
            path: newhire/management/health/readiness
            port: 8806
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 2
          failureThreshold: 2
        livenessProbe:
          httpGet:
            path: newhire/management/health/liveness
            port: 8806
          periodSeconds: 15
          timeoutSeconds: 5
        startupProbe: 
          tcpSocket:
            port: 8806
          initialDelaySeconds: 100
          failureThreshold: 20
          periodSeconds: 10
        #resources:
        #    requests:
        #      cpu:   {{ required "A valid .Values.resources.requests.cpu entry required!" .Values.resources.requests.cpu }}
        #      memory: {{ required "A valid .Values.resources.requests.memory entry required!" .Values.resources.requests.memory }}
        #    limits:
        #      cpu:   {{ required "A valid .Values.resources.limits.cpu entry required!" .Values.resources.limits.cpu }}
        #      memory: {{ required "A valid .Values.resources.limits.memory entry required!" .Values.resources.limits.memory }}
        #volumeMounts:
        #  - name: heapdump
        #    mountPath: /dumps
        env:
          - name: user_management
            value: {{ .Values.env.user_management }}
          - name: employee_management
            value: {{ .Values.env.employee_management }}
          - name: notification_management
            value: {{ .Values.env.notification_management }}
          - name: client
            value: {{ .Values.env.client }}
          - name: intmgmt
            value: {{ .Values.env.integration_management }}
          - name: reference_mgmt
            value: {{ .Values.env.reference_mgmt }}
          - name: employee_newhire
            value: {{ .Values.env.employee_newhire }}
          - name: dashboard
            value: {{ .Values.env.dashboard }}
          - name: reportsmgmt
            value: {{ .Values.env.reportsmgmt }}
          - name: confserver
            value: {{ .Values.env.confserver }}
          - name: rabbitmqhost
            value: {{ .Values.env.rabbitmqhost }}
          - name: rabbitmqport
            value: {{ .Values.env.rabbitmqport | quote }} 
          - name: audit_enable
            value: {{ .Values.env.audit_enable | quote }}
          - name: tokenmgmt
            value: {{ .Values.env.tokenmgmt }} 
          - name: jobmgmt
            value: {{ .Values.env.jobmgmt }}
          #- name: JVM_OPTS
          #  value: "-XX:MaxRAMPercentage=65.0 -XX:+UseStringDeduplication	-XX:+UnlockExperimentalVMOptions -XX:+UseZGC -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/dumps/newhire.bin"
          - name: DD_AGENT_HOST
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: DD_ENV
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['tags.datadoghq.com/env']
          - name: DD_SERVICE
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['tags.datadoghq.com/service']
          - name: DD_VERSION
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['tags.datadoghq.com/version']
          - name: DD_LOGS_INJECTION
            value: "true" 